{"version":3,"sources":["style.scss","style.css"],"names":[],"mappings":"AA2BA;EACI,WAAW;AC1Bf;;AD4BA;EACI,YACJ;AC1BA;;AD2BA;EACI,qBAAqB;ACxBzB;;AD0BA;EACI,yBAAyB;ACvB7B;;ADEQ;EAwBJ;IACI,YAAY;IACZ,oBAAa;IAAb,aAAa;IACb,0BAAsB;QAAtB,sBAAsB;IACtB,mBAAqB;QAArB,qBAAqB;IACrB,kBAAyB;QAAzB,yBAAyB;IACzB,sBAAsB;IACtB,gBAAgB;IAChB,YAAY;ECtBlB;EDwBE;IACI,WAAW;IACX,kBAAkB;ECtBxB;EDwBE;IACI,aAAa;ECtBnB;EDwBE;IACI,aAAa;ECtBnB;EDwBE;IACI,oBAAa;IAAb,aAAa;IACb,0BAAsB;QAAtB,sBAAsB;IACtB,gBAAe;ECtBrB;AACF;;AD1BQ;EAoDA;IACI,oBAAa;IAAb,aAAa;IACb,qBAAuB;QAAvB,uBAAuB;ECtBjC;EDwBM;IACI,oBAAa;IAAb,aAAa;IACb,WAAW;IACX,2BAA6B;QAA7B,6BAA6B;IAC7B,sBAAmB;QAAnB,mBAAmB;ECtB7B;EDwBM;IACI,aAAa;ECtBvB;AACF","file":"style.css","sourcesContent":["//Définition des breakpoints via une MAP\n$breakpoints: (\n  'small' : '0px',\n  'medium': '800px',\n  'large': '1000px',\n  'huge': '1200px',\n);\n\n//Mixin qui permet d'utiliser facilement les mediaQueries\n@mixin respond-to($breakpoint) {\n    // Retrieves the value from the key\n    $value: map-get($breakpoints, $breakpoint);\n    \n    //Si la clé existe dans la MAP\n    @if $value != null {\n        //Retourner le media queries avec la valeur correspondant à la clé\n        @media (min-width: $value) {\n        @content;\n        }\n    }\n    \n    // If the key doesn't exist in the map\n    @else {\n        @warn \"Problème `#{$breakpoint}`. \"\n            + \"Vérifier que  `$breakpoints` est définit dans la map.\";\n    }\n}\nimg{\n    width: 100%;\n}\na{\n    color:white\n}\nul{\n    list-style-type: none;\n}\nul li{\n    margin: 0px 10px 0px 10px;\n}\n@include respond-to('small') {\n    .barNav{\n        width: 100vw;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-end;\n        justify-content: flex-end;\n        background-color: grey;\n        min-height: 50px;\n        height: auto;\n    }\n    .hamb{\n        width: 40px;\n        margin-right: 20px;\n    }\n    .nav{\n        display: none;\n    }\n    .dropdown{\n        display: none;\n    }\n    input[type='checkbox']:checked ~ .nav{\n        display: flex;\n        flex-direction: column;\n        margin-top:10px;\n    }\n}\n\n@include respond-to('medium') {\n        .barNav{\n            display: flex;\n            justify-content: center;\n        }\n        .nav{\n            display: flex;\n            width: 100%;\n            justify-content: space-evenly;\n            align-items: center;\n        }\n        .hamb{\n            display: none;\n        }\n}\n","img {\n  width: 100%;\n}\n\na {\n  color: white;\n}\n\nul {\n  list-style-type: none;\n}\n\nul li {\n  margin: 0px 10px 0px 10px;\n}\n\n@media (min-width: 0px) {\n  .barNav {\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: flex-end;\n    background-color: grey;\n    min-height: 50px;\n    height: auto;\n  }\n  .hamb {\n    width: 40px;\n    margin-right: 20px;\n  }\n  .nav {\n    display: none;\n  }\n  .dropdown {\n    display: none;\n  }\n  input[type='checkbox']:checked ~ .nav {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n  }\n}\n\n@media (min-width: 800px) {\n  .barNav {\n    display: flex;\n    justify-content: center;\n  }\n  .nav {\n    display: flex;\n    width: 100%;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n  .hamb {\n    display: none;\n  }\n}\n"]}