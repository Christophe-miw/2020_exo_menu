{"version":3,"sources":["style.scss","style.css"],"names":[],"mappings":"AA2BA,4BAAA;AACA;EACI,WAAW;AC1Bf;;AD4BA;EACI,YACJ;AC1BA;;AD2BA;EACI,qBAAqB;ACxBzB;;AD0BA;EACI,yBAAyB;ACvB7B;;ADyBA,qCAAA;AAOA,0CAAA;AAIA,kDAAA;AAnCQ;EAqCJ;IAXA,oBAAa;IAAb,aAAa;IACb,0BAAsB;QAAtB,sBAAsB;IACtB,WAAW;IAYP,mBAAqB;QAArB,qBAAqB;IACrB,sBAAsB;IACtB,gBAVY;IAWZ,YAAY;EC9BlB;EDwBE;IAUQ,WAfQ;IAgBR,kBAAkB;EC/B5B;EDoBE;IAgBQ,aAAa;ECjCvB;EDiBE;IAqBQ,aAAa;ECnCvB;EDcE;IAXA,oBAAa;IAAb,aAAa;IACb,0BAAsB;QAAtB,sBAAsB;IACtB,WAAW;IAoCH,sBAAmB;QAAnB,mBAAmB;IACnB,cAAc;ECnCxB;AACF;;ADuCA,mDAAA;AAtEQ;EAwEA;IACI,YAAY;IACZ,oBAAa;IAAb,aAAa;IACb,qBAAuB;QAAvB,uBAAuB;ECpCjC;EDiCM;IAOQ,aAAa;ECrC3B;ED8BM;IAYQ,oBAAa;IAAb,aAAa;IACb,uBAAmB;QAAnB,mBAAmB;IACnB,sBAAmB;QAAnB,mBAAmB;IACnB,gBAtDQ;IAuDR,WAAW;ECvCzB;EDuBM;IAqBQ,YA7DI;IA8DJ,oBAAa;IAAb,aAAa;IACb,uBAAmB;QAAnB,mBAAmB;IACnB,WAAW;IACX,qBAAuB;QAAvB,uBAAuB;IACvB,sBAAmB;QAAnB,mBAAmB;IACnB,gBAlEQ;ECyBtB;EDcM;IA+BY,kBAAkB;EC1CpC;AACF","file":"style.css","sourcesContent":["//Définition des breakpoints via une MAP\n$breakpoints: (\n  'small' : '0px',\n  'medium': '800px',\n  'large': '1000px',\n  'huge': '1200px',\n);\n\n//Mixin qui permet d'utiliser facilement les mediaQueries\n@mixin respond-to($breakpoint) {\n    // Recuperer la valeur depuis la clé\n    $value: map-get($breakpoints, $breakpoint);\n    \n    //Si la clé existe dans la MAP\n    @if $value != null {\n        //Retourner le media queries avec la valeur correspondant à la clé\n        @media (min-width: $value) {\n        @content;\n        }\n    }\n    \n    //Si le media n'existe pas dans la map\n    @else {\n        @warn \"Problème `#{$breakpoint}`. \"\n            + \"Vérifier que  `$breakpoints` est définit dans la map.\";\n    }\n}\n/* ------- GENERAL ------- */\nimg{\n    width: 100%;\n}\na{\n    color:white\n}\nul{\n    list-style-type: none;\n}\nul li{\n    margin: 0px 10px 0px 10px;\n}\n/* ------- MIXIN RACCOURCIS ------- */\n@mixin flex-column{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n}\n\n/* ------- DECLARATION VARIABLES ------- */\n$heightNavNar : 40px;\n$fontsize-desktop: 1.3em;\n\n/* ------- STYLE POUR ECRAN TAILLE SMALL ------- */\n@include respond-to('small') {\n    .barNav{\n        //Mettre les elements de la barNav en colonne + hauteur adaptable au contenu\n        @include flex-column;\n        align-items: flex-end;\n        background-color: grey;\n        min-height: $heightNavNar;\n        height: auto;\n\n        //Taille de l'hamburger = taille de la navBar et decaler hamburger à gauche\n        .hamb{\n            width: $heightNavNar;\n            margin-right: 20px;\n        }\n\n        //Masquer le champ input\n        .dropdown{\n            display: none;\n        }\n\n        //Par defaut, rendre les liens invisible\n        .nav{\n            display: none;\n        }\n\n        //Afficher liens en colonne centrer\n        input[type='checkbox']:checked ~ .nav{\n            @include flex-column;\n            align-items: center;\n            font-size: 2em;\n        }\n    }   \n}\n\n/* ------- STYLE POUR ECRAN TAILLE MEDIUM ------- */\n@include respond-to('medium') {\n        .barNav{\n            height: 50px;\n            display: flex;\n            justify-content: center;\n\n            //Masque l'hamburger\n             .hamb{\n                display: none;\n            }\n\n            //Fermer le menu mobile ouvert si l'on passe au medium\n            input[type='checkbox']:checked ~ .nav{\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                font-size: $fontsize-desktop;\n                width: 100%;\n            }\n\n            //Remettre les liens en ligne, et centrer dans le navbar\n            .nav{\n                height: $heightNavNar;\n                display: flex;\n                flex-direction: row;\n                width: 100%;\n                justify-content: center;\n                align-items: center;\n                font-size: $fontsize-desktop;\n                \n                //Espacer les liens entre-eux\n                li {\n                    margin-right: 40px;\n                }\n            }\n            \n        }\n        \n    \n}\n","/* ------- GENERAL ------- */\nimg {\n  width: 100%;\n}\n\na {\n  color: white;\n}\n\nul {\n  list-style-type: none;\n}\n\nul li {\n  margin: 0px 10px 0px 10px;\n}\n\n/* ------- MIXIN RACCOURCIS ------- */\n/* ------- DECLARATION VARIABLES ------- */\n/* ------- STYLE POUR ECRAN TAILLE SMALL ------- */\n@media (min-width: 0px) {\n  .barNav {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-items: flex-end;\n    background-color: grey;\n    min-height: 40px;\n    height: auto;\n  }\n  .barNav .hamb {\n    width: 40px;\n    margin-right: 20px;\n  }\n  .barNav .dropdown {\n    display: none;\n  }\n  .barNav .nav {\n    display: none;\n  }\n  .barNav input[type='checkbox']:checked ~ .nav {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-items: center;\n    font-size: 2em;\n  }\n}\n\n/* ------- STYLE POUR ECRAN TAILLE MEDIUM ------- */\n@media (min-width: 800px) {\n  .barNav {\n    height: 50px;\n    display: flex;\n    justify-content: center;\n  }\n  .barNav .hamb {\n    display: none;\n  }\n  .barNav input[type='checkbox']:checked ~ .nav {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    font-size: 1.3em;\n    width: 100%;\n  }\n  .barNav .nav {\n    height: 40px;\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.3em;\n  }\n  .barNav .nav li {\n    margin-right: 40px;\n  }\n}\n"]}