//Définition des breakpoints via une MAP
$breakpoints: (
  'small' : '0px',
  'medium': '800px',
  'large': '1000px',
  'huge': '1200px',
);

//Mixin qui permet d'utiliser facilement les mediaQueries
@mixin respond-to($breakpoint) {
    // Retrieves the value from the key
    $value: map-get($breakpoints, $breakpoint);
    
    //Si la clé existe dans la MAP
    @if $value != null {
        //Retourner le media queries avec la valeur correspondant à la clé
        @media (min-width: $value) {
        @content;
        }
    }
    
    // If the key doesn't exist in the map
    @else {
        @warn "Problème `#{$breakpoint}`. "
            + "Vérifier que  `$breakpoints` est définit dans la map.";
    }
}
img{
    width: 100%;
}
a{
    color:white
}
ul{
    list-style-type: none;
}
ul li{
    margin: 0px 10px 0px 10px;
}
@include respond-to('small') {
    .barNav{
        width: 100vw;
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        justify-content: flex-end;
        background-color: grey;
        min-height: 50px;
        height: auto;
    }
    .hamb{
        width: 40px;
        margin-right: 20px;
    }
    .nav{
        display: none;
    }
    .dropdown{
        display: none;
    }
    input[type='checkbox']:checked ~ .nav{
        display: flex;
        flex-direction: column;
        margin-top:10px;
    }
}

@include respond-to('medium') {
        .barNav{
            display: flex;
            justify-content: center;
        }
        .nav{
            display: flex;
            width: 100%;
            justify-content: space-evenly;
            align-items: center;
        }
        .hamb{
            display: none;
        }
}
